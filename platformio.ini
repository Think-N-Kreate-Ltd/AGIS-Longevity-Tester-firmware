; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:esp32-s3-devkitc-1]
platform = espressif32
board = esp32-s3-devkitc-1
framework = arduino
board_build.filesystem = littlefs
upload_speed = 921600
monitor_filters = direct, esp32_exception_decoder
monitor_speed = 115200
lib_deps = 
	; https://github.com/me-no-dev/ESPAsyncWebServer.git
	arduinogetstarted/ezButton@^1.0.4
	; https://github.com/tzapu/WiFiManager.git
	;ayushsharma82/AsyncElegantOTA@^2.2.7
	; bblanchon/ArduinoJson@^6.21.2
	; adafruit/Adafruit GFX Library@^1.11.5
	; adafruit/Adafruit SSD1306@^2.5.7
	; https://github.com/adafruit/Adafruit_INA219.git
	; bodmer/TFT_eSPI@^2.5.30
	; https://github.com/lvgl/lvgl.git#release/v8.3
	; chris--a/Keypad@^3.1.1
	; adafruit/SdFat - Adafruit Fork@^2.2.1
build_flags = 
	; -D USER_SETUP_LOADED=1
	; -D ILI9341_DRIVER=1
	; -D TFT_WIDTH=240			; Redefined, not in need
	; -D TFT_HEIGHT=320			; Redefined, not in need
	; -D TFT_MOSI=11
	; -D TFT_SCLK=12
	; -D TFT_CS=10
	; -D TFT_DC=13
	; -D TFT_RST=14
	; -D SMOOTH_FONT=1
	; -D SPI_FREQUENCY=27000000
	; -D SPI_FREQUENCY=40000000	; SdFat can run at 50MHz atmost
	; -D DISABLE_ALL_LIBRARY_WARNINGS=1
	; -D LOAD_FONT2=1
	; -D LOAD_FONT4=1
	; -D LOAD_FONT6=1
	; -D LOAD_FONT7=1
	; -D LOAD_FONT8=1
	; -D LOAD_GFXFF=1
	
	; -D LV_CONF_INCLUDE_SIMPLE=1
	-D CORE_DEBUG_LEVEL=3
	-D CONFIG_ARDUHAL_LOG_COLORS=1
debug_tool = esp-builtin
build_src_filter =
  +<main.cpp>

; Shared options
[env]
build_flags =
  ; Don't use lv_conf.h. Tweak params via platfom.ini.
  -D LV_CONF_SKIP
  -D LV_CONF_INCLUDE_SIMPLE
  ; Enable LVGL demo, remove when working on your own project
  ; -D LV_USE_DEMO_WIDGETS=1
  ; Add more defines below to overide lvgl:/src/lv_conf_simple.h
 -D LV_FONT_MONTSERRAT_10=1
 -D LV_FONT_MONTSERRAT_12=1
lib_deps =
  lvgl=https://github.com/lvgl/lvgl.git#release/v8.3
lib_archive = false


[env:emulator_64bits]
platform = native@^1.1.3
extra_scripts = support/sdl2_build_extra.py
build_flags =
  ${env.build_flags}
  ; -D LV_LOG_LEVEL=LV_LOG_LEVEL_INFO
  -D LV_LOG_PRINTF=1
  ; Add recursive dirs for hal headers search
  !python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/sdl2')]))"
  -lSDL2
  ; SDL drivers options
  -D LV_LVGL_H_INCLUDE_SIMPLE
  -D LV_DRV_NO_CONF
  -D USE_SDL
  -D SDL_HOR_RES=320
  -D SDL_VER_RES=240  
  -D SDL_ZOOM=1
  -D SDL_INCLUDE_PATH="\"SDL2/SDL.h\""

  ; LVGL memory options, setup for the demo to run properly
  -D LV_MEM_CUSTOM=1
  -D LV_MEM_SIZE="(128U * 1024U)"

  ; User define
  -D TFT_WIDTH=240
  -D TFT_HEIGHT=320

  -I src/hal/sdl2
  -I src/UI
  
lib_deps =
  ${env.lib_deps}
  lv_drivers=https://github.com/lvgl/lv_drivers/archive/refs/tags/v8.3.0.zip
build_src_filter =
  +<../src/hal/sdl2>
  +<../src/UI>
  +<UI_Simulator.c>